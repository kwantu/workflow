(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Workflow = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function Workflow(e,r,i,s){var o=this;if(""===e||void 0===e)throw new Error("A profile id is required.");if("string"!=typeof e)throw new Error("The profile id must be a javascript string.");if(o.profile=e||"",""===r||void 0===r)throw new Error("An app id is required.");if("string"!=typeof r)throw new Error("The app id must be a javascript string.");if(o.app=r||"",""===i||void 0===i)throw new Error("A workflow configuration is required.");"object"!=typeof i?o.config=JSON.parse(i):o.config=i,o.instance=s}var Process=require("./lib/process"),util=require("./lib/utility"),models=require("./lib/models");Workflow.prototype.create=function(){var e=this;return new Promise(function(r,i){if(void 0!==e.instance){var s=util.warn("Instance already exists.",e.instance);r(s)}else{var o=models.instance();o._id=e.profile+":processes",o.version=e.config.version,e.instance=o;var t=util.success("Workflow processes instance created successfully.",e.instance);r(t)}})},Workflow.prototype.initialize=function(e,r){var i=this;return new Promise(function(s,o){var t=[];if(""!==e&&void 0!==e){if(t=i.config.processes.filter(function(r){return r._id===e?r:void 0}),void 0===t[0]._id){var n=util.error("WFConfigError","No valid process definition found with process id: "+e);o(n)}}else t.push(i.config.processes[0]),e=i.config.processes[0]._id;var c=[];c=i.instance.processes.filter(function(r){return r.id===e?r:void 0});var u=c.length,f=u+1,a={id:"",seq:"",subProcesses:[]};a.id=e,a.seq=f,i.instance.processes.push(a),Process.preRequisites(t[0].prerequisites,i).then(function(n){if(n.complete===!0)Process.preActions(t[0].preActions,i).then(function(n){if(n.complete)Process.subProcess(e,t[0].subProcesses[0],1,r,i).then(function(r){if(r.complete){var t=r.res;i.instance.processes.filter(function(r){r.id===e&&r.subProcesses.push(t)});var n=util.success("Process: "+i.config.processes[0]._id+" initialized successfully.");s(n)}else{var c=util.error("WFSubProcessError","Process initialisation failed.");o(c)}},function(e){o(e)});else{var c=util.error("WFPreActionsError","Process pre-actions execution failed.");o(c)}},function(e){o(e)});else{var c=util.error("WFPreRequisitesError","Process pre-requisites execution failed.");o(c)}},function(e){o(e)})})},Workflow.prototype.task=function(e,r){return new Promise(function(r,i){"indicator.markComplete"===e?r("Success"):i("Error")})},Workflow.prototype.transition=function(e,r,i,s,o,t,n){return new Promise(function(c,u){Process.transition(e,r,i,s,o,t,n).then(function(e){var r=util.success("Workflow transitioned to the next step successfully.",o);c(r)},function(e){u(e)})})},module.exports=Workflow;

},{"./lib/models":3,"./lib/process":4,"./lib/utility":5}],2:[function(require,module,exports){
"use strict";function create(e,s){var t=[];return new Promise(function(r,u){util.syncLoop(e.indicators.length,function(r){var u=r.iteration(),c=e.indicators[u]._id,i=e.indicators[u].name.i18n.value,o=s.profile+":"+s.app+":"+c+":0",n={_id:o,category:{term:c,label:i},processes:[]};t.push(n),r.next()},function(){var e=util.success("Form created successfully.",t);r(e)})})}function save(e){var s={complete:!0,data:[]};return new Promise(function(e,t){var r=util.success("Form indicator set saved successfully.",s);e(r)})}function submit(e){var s={complete:!0,data:[]};return new Promise(function(e,t){var r=util.success("Form submitted successfully.",s);e(r)})}function authorise(e){var s={complete:!0,data:[]};return new Promise(function(e,t){var r=util.success("Form authorised successfully.",s);e(r)})}function close(e){var s={complete:!0,data:[]};return new Promise(function(e,t){var r=util.success("Form closed successfully.",s);e(r)})}var util=require("./utility");module.exports={create:create,save:save,submit:submit,authorise:authorise,close:close};

},{"./utility":5}],3:[function(require,module,exports){
"use strict";function instance(){var e={_id:"",version:"",type:"workflowInstance",processes:[]};return e}function configuration(){var e={_id:"1234:mangaungProject",_version:"1.0",type:"workflowConfig",title:{name:{i18n:{_lang:"en",value:"Mangagung project workflow"}},description:{i18n:{_lang:"en",value:"Mangagung project workflow used to manage housing development."}}},identification:{documentation:{i18n:{_lang:"",value:""}},upgradeInformation:{i18n:{_lang:"",value:""}}},variables:{variable:[{_id:"",_dataType:"",_sessionVar:"",_default:"",_value:""}]},roles:{role:[{_id:"",_level:"",name:{i18n:{_lang:"",value:""}},roleMappings:{roleMapping:{_applicationId:"",_roleId:""}},requiredRoles:{requiredRole:{_applicationId:"",_roleId:""}}}]},processes:[{_id:"registration",_seq:"1",name:{i18n:{_lang:"en",value:"Register a project"}},help:{i18n:{_lang:"en",value:"Register a new project"}},variables:[{_id:"",_dataType:"",_sessionVar:"",_default:"",_value:""}],prerequisites:[{_seq:"1",_type:"count",_subject:"monthlyProgress.instance",_operator:"equalTo",_value:"0",message:{i18n:{_lang:"en",value:"The project registration form can't be edited once the monthly progress process has been initiated."}}}],preActions:[{_seq:"",_type:"",funct:{module:"",method:"",params:{param:[]}},rest:{hostId:"",service:"",APIKey:"",format:"",collection:"",endpoint:"",params:{param:[]}}}],subProcesses:[{_id:"spRegistration",_seq:"1",name:{i18n:{_lang:"en",value:"Project Registration Form"}},help:{i18n:{_lang:"en",value:"Register a new project"}},initiate:{_type:"user",maxInstances:"-1",action:{_type:"button",label:"Create"},dates:{valid:{_type:"userSelected",message:{i18n:{_lang:"en",value:"Please select a valid date i.e. the monthly date that the data captured is valid for."}}},due:{_type:"userSelected",message:{i18n:{_lang:"en",value:"Please select a due date i.e. the actual date that the data needs to be captured and authorised by."}}}}},indicators:[{_id:"projectDetail",maxInstances:"1",name:{i18n:{_lang:"en",value:"Project Details"}}},{_id:"projectLocation",maxInstances:"-1",name:{i18n:{_lang:"en",value:"Project Locations"}}},{_id:"developerDetail",maxInstances:"1",name:{i18n:{_lang:"en",value:"Developer Details"}}}],steps:[{_id:"createForm",_seq:"1",_setInstanceStatusTo:"Created",_setStatusMsgTo:"Form created",name:{i18n:{_lang:"en",value:"Create the registration form."}},prerequisites:[{_seq:"",_type:"",_operator:"",_subject:"",_value:"",message:{i18n:{_lang:"en",value:""}}}],actions:[{_seq:"1",_type:"internal",funct:{module:"form",method:"create",type:"newSequence"},transitions:[{_type:"auto",name:{i18n:{_lang:"en",value:""}},goTo:{_type:"nextStep",_stepId:""},_stop:!1}]}]},{_id:"captureForm",_seq:"2",_setStatusTo:"InProgress",_setStatusMsgTo:"User assigned and data capture in progress",name:{i18n:{_lang:"en",value:"Capture"}},prerequisites:[{_seq:"1",_type:"readyToSubmit",_subject:"indicators.complete",_operator:"equalTo",_value:"true",message:{i18n:{_lang:"en",value:"All form indicators have to be marked as complete before submission."}}}],actions:[],task:{assign:{profileRole:{profile:"current",role:"capturer"},"default":""},work:{action:"editForm"},transitions:[{_id:"submitForm",_type:"user",name:{i18n:{_lang:"en",value:"Submit"}},goTo:{_type:"nextStep",_stepId:""},_stop:!1}]}},{_id:"authoriseForm",_seq:"3",_setInstanceStatusTo:"awaitingAuthorisation",_setStatusMsgTo:"Form data submitted, user assigned and form data under review",name:{i18n:{_lang:"en",value:"Review the registration form data."}},prerequisites:[{_seq:"1",_type:"checkRole",_subject:"profileRole",_operator:"equalTo",_value:"authoriser",message:{i18n:{_lang:"en",value:"You have to be an authoriser on the project to approve the form data that has been captured or refer back for further editing."}}}],actions:[],task:{assign:{profileRole:{profile:"current",role:"authoriser"},"default":""},work:{action:"editForm"},transitions:[{_id:"authoriseForm",_type:"user",name:{i18n:{_lang:"en",value:"Authorise"}},goTo:{_type:"nextStep",_stepId:""},_stop:!1},{_id:"revertForm",_type:"user",name:{i18n:{_lang:"en",value:"Refer Back"}},goTo:{_type:"stepId",_stepId:"captureForm"},_stop:!1}]}},{_id:"closeForm",_seq:"5",_setInstanceStatusTo:"Complete",_setStatusMsgTo:"Form locked",name:{i18n:{_lang:"en",value:"Close the registration form."}},actions:[{_seq:"1",_type:"internal",funct:{module:"form",method:"authorise"},transition:[{_type:"auto",name:{i18n:{_lang:"en",value:""}},goTo:{_type:"",_stepId:""},_stop:!0}]}]}]}],postActions:{}}]};return e}function process(){var e={configId:"",instanceId:"",processId:"",subProcessId:"",stepId:"",assignedTo:{userId:"",name:""},token:"",status:"",statusMsg:"",lastUpdated:"",dueDate:""};return e}var util=require("./utility");module.exports={configuration:configuration,instance:instance,process:process};

},{"./utility":5}],4:[function(require,module,exports){
"use strict";function preRequisites(e){var t={complete:!1,data:[]};return new Promise(function(e,s){var i=util.success("Pre-requisites completed successfully.",t);e(i)})}function preRequisite(e,t,s){return new Promise(function(t,s){switch(e._type){case"count":var i={},n=util.success("Mock count successfull.",i);t(n);break;default:var r=util.error("WFPreRequisiteError","Pre-requisite type: "+e._type+" not defined.");s(r)}})}function preActions(e,t){var s={complete:!1,data:[]};return new Promise(function(e,t){var i=util.success("Pre-actions completed successfully.",s);e(i)})}function subProcess(e,t,s,i,n){var r={id:t._id,seq:s,initiated:!1,dates:{created:"",valid:"",due:"",closed:""},complete:!1,indicators:[],step:{id:"",seq:"",status:"",message:"",assignedTo:{userId:"",name:""}}};return new Promise(function(s,o){initiate(t.initiate,i).then(function(a){if(a.complete){r.initiated=!0,r.dates.created=a.res.createdDate,r.dates.valid=a.res.validDate,r.dates.due=a.res.dueDate;var c={id:t._id,name:t.name.i18n.value,indicators:t.indicators};step(e,t._id,r,t.steps[0],0,c,i,n).then(function(e){if(e.complete){var i=util.success("Sub-Process completed successfully.",e.res);s(i)}else{var n=util.error("WFStepError","Step "+t.steps[0]._id+"was not completed successfully.");o(n)}},function(e){o(e)})}else{var u=util.error("WFSubProcessError","Sub-process: "+t._id+" not initiated successfully.");o(u)}},function(e){o(e)})})}function initiate(e,t){var s={complete:!1};return new Promise(function(i,n){switch(e._type){case"user":if(s.createdDate=t.createdDate,"userSelected"===e.dates.valid._type)if(void 0!==t.validDate)s.validDate=t.validDate;else{var r=util.error("WFInitiateError","No valid date passed in - {inputData.validDate}");n(r)}if("userSelected"===e.dates.due._type)if(void 0!==t.dueDate)s.dueDate=t.dueDate;else{var r=util.error("WFInitiateError","No due date passed in - {inputData.dueDate}");n(r)}s.complete=!0;var o=util.success("Sub-Process initiate completed successfully.",s);i(o);break;default:var r=util.error("WFInitiateError","Initiate type: "+e._type+" not defined.");n(r)}})}function step(e,t,s,i,n,r,o,a){return new Promise(function(c,u){if(s.step.id=i._id,s.step.seq=n,s.step.status=i._setInstanceStatusTo,s.step.message=i._setStatusMsgTo,s.step.message=i._setStatusMsgTo,s.step.assignedTo.userId=o.userId,s.step.assignedTo.name=o.name,void 0!==i.actions[0])actions(i.actions,r,a).then(function(r){({id:i._id,seq:n,startDate:o.createdDate,status:i._setInstanceStatusTo,message:i._setStatusMsgTo,assignedTo:{userId:o.userId,name:o.name},comment:o.comment,complete:!1,endDate:""});util.syncLoop(r.res.data[0].form.indicators.length,function(e){var t=e.iteration();({id:r.res.data[0].form.indicators[t].category.term,instances:[{uuid:r.res.data[0].form.indicators[t]._id,key:"",seq:1}]});e.next()},function(){if(0!==i.actions[0].transitions.length)util.syncLoop(i.actions[0].transitions.length,function(n){var r=n.iteration();transition(e,t,i._id,i.actions[0].transitions[r]._id,s,o,a).then(function(e){var t=util.success("Transition step completed successfully.",s);c(t)}).fail(function(e){u(e),n["break"]()}),n.next()});else{var n=util.success("No transitions specified in this step.",s);c(n)}})},function(e){u(e)});else if(void 0!==i.task){var d=util.success("Task awaiting user action.",s);c(d)}else{var l=util.error("WF013");u(l)}})}function actions(e,t,s){var i=[],n={completed:!0,data:[]};return new Promise(function(r,o){util.syncLoop(e.length,function(r){var a=r.iteration();action(e[a],t,s).then(function(e){i.push(e.complete),n.data.push(e.res),r.next()},function(e){o(e),r["break"]()})},function(){if(i.every(Boolean)){n.completed=!0;var e=util.success("Actions completed successfully.",n);r(e)}else{n.completed=!1;util.error("WFActionsError","Action/s for sub-process: "+t.id+" did not complete succeffully.");o(e)}})})}function action(e,t,s){return new Promise(function(i,n){switch(e._id){case"createForm":form.create(t,s).then(function(s){var n={transitions:[],form:{id:t.id,indicators:[]}};n.transitions=e.transitions,n.form.indicators=s.res;var r=util.success(s.message,n);i(r)},function(e){n(e)});break;case"authoriseForm":form.authorise(t,s).then(function(s){var n={transitions:[],form:{id:t.id,indicators:[]}};n.transitions=e.transitions;var r=util.success(s.message,n);i(r)},function(e){n(e)});break;case"closeForm":form.close(t,s).then(function(s){var n={transitions:[],form:{id:t.id,indicators:[]}};n.transitions=e.transitions;var r=util.success(s.message,n);i(r)},function(e){n(e)});break;default:var r=util.error("WFActionError","Action defined with id: "+e._id+" not found.");n(r)}})}function task(e){return"Implementation pending.."}function transition(e,t,s,i,n,r,o){return new Promise(function(a,c){var u=o.config.processes.filter(function(t){return t._id===e?t:void 0}),d=u[0].subProcesses.filter(function(e){return e._id===t?e:void 0}),l=d[0].steps.filter(function(e){return e._id===s?e:void 0}),f={};f=void 0!==l[0].actions[0]?l[0].actions[0].transitions.filter(function(e){return e._id===i?e:void 0}):l[0].task.transitions.filter(function(e){return e._id===i?e:void 0});for(var p=0,m=0;m<d[0].steps.length;m++)d[0].steps[m]._id===s&&(p=m);for(var v={},m=0;m<d[0].steps.length;m++){var _=p+1;m===_&&(v=d[0].steps[m])}switch(f[0]._type){case"auto":if("nextStep"===f[0].goTo._type)step(e,t,n,v,p,{},r,o).then(function(e){var t=util.success("Step transition completed successfully.",e.res);a(t)},function(e){c(e)});else if(f[0]._stop===!0){var y=util.success("All Step transitions have completed successfully.",{});a(y)}break;case"user":if("nextStep"===f[0].goTo._type)step(e,t,n,v,p,{},r,o).then(function(e){var t=util.success("Step transition completed successfully.",e.res);a(t)},function(e){c(e)});else if("stepId"===f[0].goTo._type){for(var h=f[0].goTo._stepId,g=d[0].steps.filter(function(e){return e._id===h?e:void 0}),S=1,m=0;m<d[0].steps.length;m++)d[0].steps[m]._id===h&&(S=m+1);step(e,t,n,g[0],S,{},r,o).then(function(e){var t=util.success("Step transition completed successfully.",e.res);a(t)},function(e){c(e)})}else if(f[0]._stop===!0){var y=util.success("All Step transitions have completed successfully.",{});a(y)}break;default:if(f[0]._stop===!0){var y=util.success("All Step transitions have completed successfully.",{});a(y)}else{var P=util.error("WF005");c(P)}}})}function postActions(e){return"Implementation pending.."}var util=require("./utility"),form=require("./form");module.exports={preRequisites:preRequisites,preActions:preActions,subProcess:subProcess,task:task,transition:transition};

},{"./form":2,"./utility":5}],5:[function(require,module,exports){
"use strict";module.exports={success:function(e,r){var n={complete:!0,message:e,res:r};return n},warn:function(e,r){var n={complete:!0,warning:e,res:r};return console.warn(n),n},error:function(e,r){var n=new Error("");return n.name=e,n.message=r,n},syncLoop:function(e,r,n){var t=0,a=!1,u=!1,s={next:function(){return a&&u&&n?n():void(e>t?(t++,r(s)):(a=!0,n&&n()))},iteration:function(){return t-1},"break":function(e){a=!0,u=e}};return s.next(),s},compare:function(e,r,n){switch(r){case"greaterThan":return e>n;case"lessThan":return n>e;case"greaterThanEqual":return e>=n;case"lessThanEqual":return n>=e;case"equalTo":return e===n;case"notEqualTo":return e!==n}}};

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
